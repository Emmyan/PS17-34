package com.example.emmy.pakasa;

import android.app.AlertDialog;
import android.content.Context;
import android.os.AsyncTask;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;

/**
 * Created by Emmy on 8/18/2017.
 */

public class BackgroundTask extends AsyncTask<String,Void,String> {
    AlertDialog alertDialog;

    Context ctx;

    BackgroundTask(Context ctx){
        //init var frm const
        this.ctx = ctx;
    }

    @Override
    protected void onPreExecute() {
        //super.onPreExecute();
        //init alert D
        alertDialog = new AlertDialog.Builder(ctx).create();
        alertDialog.setTitle("Login Information....");

    }

    @Override
    protected String doInBackground(String... params) {
        //pass info to sql server
        String register_url = "http://10.0.2.2/pakasaapp/register.php";
        String login_url = "http://10.0.2.2/pakasaapp/register.php";

        String method = params[0];
        if (method.equals("register")){
            String name = params[1];
            String username = params[2];
            String gender = params[3];
            String phone = params[4];
            String age = params[5];
            String password = params[6];

            try {
                URL url = new URL(register_url);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                //set para
                httpURLConnection.setRequestMethod("POST");
                httpURLConnection.setDoOutput(true);//bkoz we pass info
                //get outputtream frm http
                OutputStream OS = httpURLConnection.getOutputStream();
                BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(OS, "UTF-8"));
                //ecode data b4 sen
                String data = URLEncoder.encode("name", "UTF-8")+"="+URLEncoder.encode(name, "UTF-8")+"&"+
                        URLEncoder.encode("username", "UTF-8")+"="+URLEncoder.encode(username, "UTF-8")+"&"+
                        URLEncoder.encode("gender", "UTF-8")+"="+URLEncoder.encode(gender, "UTF-8")+"&"+
                        URLEncoder.encode("phone", "UTF-8")+"="+URLEncoder.encode(phone, "UTF-8")+"&"+
                        URLEncoder.encode("age", "UTF-8")+"="+URLEncoder.encode(age, "UTF-8")+"&"+
                        URLEncoder.encode("password", "UTF-8")+"="+URLEncoder.encode(password, "UTF-8");

                //write data into bfawrta
                bufferedWriter.write(data);
                bufferedWriter.flush();
                bufferedWriter.close();
                OS.close();
                //to get response frm server
                InputStream IS = httpURLConnection.getInputStream();
                IS.close();

                return "Register Success...!";
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        else if (method.equals("login")){
            //get info frm usa
            String loginUsername = params[1];
            String loginPassword = params[2];
            //pass uname n pword to server
            try {
                URL url = new URL(login_url);
                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                httpURLConnection.setRequestMethod("POST");
                httpURLConnection.setDoOutput(true);
                httpURLConnection.setDoInput(true);//get reposns frm sava
                //get outPstrm frm htt url conn
                OutputStream outputStream = httpURLConnection.getOutputStream();
                //cret bufa writa
                BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, "UTF-8"));
                //encod data b4 sending
                String data = URLEncoder.encode("loginUsername", "UTF-8")+"="+URLEncoder.encode(loginUsername, "UTF-8")+"&"+
                        URLEncoder.encode("loginPassword", "UTF-8")+"="+URLEncoder.encode(loginPassword, "UTF-8");

                bufferedWriter.write(data);
                bufferedWriter.flush();
                bufferedWriter.close();
                outputStream.close();
                //get respons frm sava
                InputStream inputStream = httpURLConnection.getInputStream();
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, "iso-8859-1"));
                //get info frm bafad reda
                String response = "";
                String line = "";

                while ((line = bufferedReader.readLine())!=null){
                    response += line;
                }

                bufferedReader.close();
                inputStream.close();
                httpURLConnection.disconnect();//clos connection
                return response;

            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }


        }
        return null;
    }

    @Override
    protected void onProgressUpdate(Void... values) {

        super.onProgressUpdate(values);
    }

    @Override
    protected void onPostExecute(String result) {
        //super.onPostExecute(aVoid);
        if (result.equals("Register Success...!")){
            Toast.makeText(ctx,result, Toast.LENGTH_LONG).show();
        }
        else {
            alertDialog.setMessage(result);
            alertDialog.show();
        }

    }
}
